(let* ((s (with-temp-buffer
	    (insert-file-contents "day1.txt")
	    (buffer-string)))
       (s-para (split-string s "\n\n"))
       (elves (mapcar (lambda (x)
			(let* ((lines (split-string x "\n"))
			       (numbers (mapcar #'string-to-number lines)))
			  (apply '+ numbers)))
		      s-para))
       (sorted-elves (sort elves '>))
       (first (pop sorted-elves))
       (second (pop sorted-elves))
       (third (pop sorted-elves)))
  (message "Part 1: %d, Part 2: %d" first (+ first second third)))
